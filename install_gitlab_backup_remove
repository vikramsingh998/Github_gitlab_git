Pre-requsite:
copy all the data of folder: /etc/gitlab/
                            /var/opt/gitlab/backups/*           # 170154450316_2023_12_01_16.1.0_gitlab_backup.tar
always install same version of gitlab
run this commad when stop in bitween :          # ERROR:  ruby_block[wait for redis service socket] action run
                sudo /opt/gitlab/embedded/bin/runsvdir-start &

-------------------------------------------------------
uninstall github

sudo gitlab-ctl stop
sudo apt-get purge gitlab-ce
sudo rm -rf /etc/gitlab
sudo rm -rf /var/opt/gitlab
sudo rm -rf /var/log/gitlab
sudo rm -rf /opt/gitlab



----------------------------------------------------------
INSTALL: GITHUB and run backup


sudo yum install -y curl policycoreutils-python openssh-server perl
sudo systemctl enable sshd
sudo systemctl start sshd
sudo systemctl status firewalld
sudo yum install postfix
sudo systemctl enable postfix
sudo systemctl start postfix
curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash
sudo yum --showduplicate list
sudo yum install gitlab-ce-16.1.0-ce.0.el8.x86_64
sudo cp -r /home/appuser/git_lab_bkp/etc/gitlab/* /etc/gitlab/    #all the ontentof gitlab config .rb ,.json ,ssl,cert
sudo /opt/gitlab/embedded/bin/runsvdir-start &
sudo gitlab-ctl reconfigure
sudo cp 170154450316_2023_12_01_16.1.0_gitlab_backup.tar /var/opt/gitlab/backups/
sudo chown git:git /var/opt/gitlab/backups/170154450316_2023_12_01_16.1.0_gitlab_backup.tar
sudo gitlab-ctl stop puma
sudo gitlab-ctl stop sidekiq
sudo gitlab-ctl status
sudo gitlab-backup restore BACKUP=170154450316_2023_12_01_16.1.0
sudo gitlab-ctl restart
sudo gitlab-rake gitlab:check SANITIZE=true
-----------------------------------------------------------------------------------

# You have installed the exact same version and type (CE/EE)

sudo apt update
sudo apt upgrade -y
sudo apt install curl debian-archive-keyring lsb-release ca-certificates apt-transport-https software-properties-common openssh-server perl tzdata -y
sudo apt-get install -y postfix

sudo apt-cache madison gitlab-ce
sudo apt install gitlab-ce=13.0.5-ce.0
sudo vim /etc/gitlab/gitlab.rb
                external_url 'http://IP_machine'                #where you installed gitlab   ifconfig eth0   external_url 'http://172.21.62.119'
sudo gitlab-ctl reconfigure

--------------------------------------------
https://docs.gitlab.com/ee/administration/backup_restore/restore_gitlab.html#restore-for-linux-package-installations
# --------------------------------------------------------------GitLab is running. If not, start it using (sudo gitlab-ctl start)
GitLab - Restore Backup
gitlab version should be same:
gitlab_rails['allowed_hosts'] = ['gitlab.example.com', '127.0.0.1', 'localhost']

------------------------------------------------------------------------------
# Gitlab Ubuntu Backup :- 
sudo apt-get install rsync
sudo gitlab-backup create                       #data backup
sudo gitlab-ctl backup-etc                      #config_file backup

data backup location /var/opt/gitlab/backups
Gitalb config file location /etc/gitlab

Please take backup
        scp crspadmin5@20.204.14.127:/opt/postgre_bkp/1697202785_2023_10_13_16.1.0_gitlab_backup.tar ./

Backup restore:-

sudo cp/backups/backup file name /var/opt/gitlab/backups/ 

        sudo cp 697202785_2023_10_13_16.1.0_gitlab_backup.tar /var/opt/gitlab/backups/

sudo chown git.git /var/opt/gitlab/backups/backup file name

        sudo chown git:git /var/opt/gitlab/backups/11493107454_2018_04_25_10.6.4-ce_gitlab_backup.tar
ls -l

sudo gitlab-ctl stop unicorn
sudo gitlab-ctl stop puma 
sudo gitlab-ctl stop sidekiq

sudo gitlab-backup restore BACKUP (file name-ce/ee)
sudo gitlab-ctl status

sudo gitlab-rake gitlab:backup:restore BACKUP = 1697202785_2023_10_13_16.1.0

sudo gitlab-ctl start unicorn 
sudo gitlab-ctl start puma
sudo gitlab-ctl start sidekiq

sudo gitlab-ctl reconfigure 
sudo gitlab-ctl restart

sudo gitlab-rake gitlab:checkÂ SANITIZE=true

 sudo gitlab-rake "gitlab:password:reset[root]"                 #root= username
 Enter password:
Confirm password:

and now acess the gitlab account

------------------------------------------------------------------------------------


How To Install GitLab CE on Ubuntu 22.04|20.04|18.04

# Welcome to our guide on how to install GitLab CE on Ubuntu 22.04|20.04|18.04 Linux system. GitLab is a fully-featured platform for accelerated software development. It provides up to scratch features like integrated CI/CD, Kubernetes integration, Auto DevOps, GitLab Container Registry e.t.c.

# In our previous guide, we covered how Install Gitlab CE on CentOS / Fedora. Follow below steps to Install Gitlab CE on Ubuntu 22.04|20.04|18.04. The server can be running in Cloud or your own premise virtualized infrastructure.

# Step 1: Update system & install dependencies


sudo apt update
sudo apt upgrade -y
# Install GitLab dependencies below:

sudo apt install -y ca-certificates curl openssh-server tzdata

# Step 2: Configure Postfix Send-Only SMTP
sudo apt-get install -y postfix

# GitLab should be able to send emails to you on Git activities. Configure Postfix SMTP Server using the guide below:

# Install and configure Postfix as a Send-Only SMTP Server on Ubuntu

# Step 3: Add the GitLab CE Repository
# Install dependency packages required:

sudo apt update
sudo apt install curl debian-archive-keyring lsb-release ca-certificates apt-transport-https software-properties-common -y
# Run the script below to configure GitLab repository for Debian based systems.

curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash

# Command installation output:

Detected operating system as Ubuntu/jammy.
Checking for curl...
Detected curl...
Checking for gpg...
Detected gpg...
Running apt-get update... done.
Installing apt-transport-https... done.
Installing /etc/apt/sources.list.d/gitlab_gitlab-ce.list...done.
Importing packagecloud gpg key... done.
Running apt-get update... done.

The repository is setup! You can now install packages.
# The repository contents are added to:

cat /etc/apt/sources.list.d/gitlab_gitlab-ce.list
# Step 4: Install GitLab CE from repo
# Once the repository has been added, install GitLab CE on Ubuntu 22.04|20.04|18.04 using the apt package manager command:


sudo apt update
sudo apt install gitlab-ce=16.1.0-ee.0                  #try this------------> sudo apt install gitlab-ce
Installation output:

# It looks like GitLab has not been configured yet; skipping the upgrade script.

       *.                  *.
      ***                 ***
     *****               *****
    .******             *******
    ********            ********
   ,,,,,,,,,***********,,,,,,,,,
  ,,,,,,,,,,,*********,,,,,,,,,,,
  .,,,,,,,,,,,*******,,,,,,,,,,,,
      ,,,,,,,,,*****,,,,,,,,,.
         ,,,,,,,****,,,,,,
            .,,,***,,,,
                ,*,.
  


     _______ __  __          __
    / ____(_) /_/ /   ____ _/ /_
   / / __/ / __/ /   / __ `/ __ \
  / /_/ / / /_/ /___/ /_/ / /_/ /
  \____/_/\__/_____/\__,_/_.___/
  

Thank you for installing GitLab!
# Edit the GitLab configuration file to set hostname and other parameters:

$ sudo vim /etc/gitlab/gitlab.rb
external_url 'http://gitlab.example.com'

Replace gitlab.example.com with valid domain for GitLab server.

When done, start your GitLab instance by running the following command:

sudo gitlab-ctl reconfigure
All GitLab services should be started after configuration.

$ sudo gitlab-ctl status
run: alertmanager: (pid 92581) 18s; run: log: (pid 92343) 80s
run: gitaly: (pid 92590) 18s; run: log: (pid 91561) 189s
run: gitlab-exporter: (pid 92551) 20s; run: log: (pid 92078) 98s
run: gitlab-kas: (pid 92520) 22s; run: log: (pid 91845) 175s
run: gitlab-workhorse: (pid 92531) 21s; run: log: (pid 91985) 117s
run: grafana: (pid 92610) 17s; run: log: (pid 92471) 38s
run: logrotate: (pid 91486) 202s; run: log: (pid 91494) 201s
run: nginx: (pid 91993) 114s; run: log: (pid 92013) 110s
run: node-exporter: (pid 92540) 21s; run: log: (pid 92049) 104s
run: postgres-exporter: (pid 92601) 18s; run: log: (pid 92367) 76s
run: postgresql: (pid 91693) 184s; run: log: (pid 91704) 183s
run: prometheus: (pid 92560) 20s; run: log: (pid 92297) 88s
run: puma: (pid 91904) 132s; run: log: (pid 91917) 129s
run: redis: (pid 91521) 196s; run: log: (pid 91538) 193s
run: redis-exporter: (pid 92553) 20s; run: log: (pid 92217) 94s
run: sidekiq: (pid 91922) 126s; run: log: (pid 91934) 122s
Step 5: Access GitLab CE Web Interface
Once the installation of GitLab CE on Ubuntu is done, open the URL http://gitlab.example.com on your browser to finish the installation of Gitlab.

A password for root user is randomly generated and stored for 24 hours in /etc/gitlab/initial_root_password. You can check the password with the commands below:

$ cat /etc/gitlab/initial_root_password
# WARNING: This value is valid only in the following conditions
#          1. If provided manually (either via `GITLAB_ROOT_PASSWORD` environment variable or via `gitlab_rails['initial_root_password']` setting in `gitlab.rb`, it was provided before database was seeded for the first time (usually, the first reconfigure run).
#          2. Password hasn't been changed manually, either via UI or via command line.
#
#          If the password shown here doesn't work, you must reset the admin password following https://docs.gitlab.com/ee/security/reset_user_password.html#reset-your-root-password.

Password: kOtOjWp7v70OjkjtadnSJAhcDbCNo9nTNGVC5UoSCyE=

# NOTE: This file will be automatically deleted in the first reconfigure run after 24 hours.
Use this password with username root to login.

GiltLab Login
GitLab Dashboard should look like below.

install gitlab ubuntu 18.04 debian 9 interface
Reset root user password
Go to root user profile > Preferences

gitlab change root password 01
Then Password section

gitlab change root password 02
Input the current password, and set new one.

gitlab change root password 03
Step 6: Secure Gitlab CE with SSL Certificate
Read our next article below on how to configure your GitLab server to be accessible via HTTPS

How To Secure GitLab Server with SSL Certificate
GitLab Administrations cheats
Whenever you edit GitLab configuration file â /etc/gitlab/gitlab.rb,reconfigure GitLab service by running:

sudo gitlab-ctl reconfigure
sudo gitlab-rake gitlab:check
To check the status of all GitLab service, use:

sudo gitlab-ctl status
To stop all GitLab services, use:

sudo gitlab-ctl stop
To restart all GitLab services, use:

sudo gitlab-ctl restart
You can restart a specific service by proving service name at the end

$ sudo gitlab-ctl restart logrotate
 ok: run: logrotate: (pid 22824) 0s
If you need LDAP Authentication on your GitLab Server, read:

How to Configure GitLab FreeIPA Authentication
Enjoy running GitLab on Ubuntu 22.04|20.04|18.04 server and stay connected for more informative and hands-on Linux guides.





---------------------------------- ee installation
sudo apt-get update
sudo apt-get install -y curl openssh-server ca-certificates tzdata perl
 sudo apt-get install -y postfix

 curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh | sudo bash


 sudo EXTERNAL_URL="https://gitlab.example.com" apt-get install gitlab-ee
 # List available versions: apt-cache madison gitlab-ee
 # Specifiy version: sudo EXTERNAL_URL="https://gitlab.example.com" apt-get install gitlab-ee=16.2.3-ee.0
 # Pin the version to limit auto-updates: sudo apt-mark hold gitlab-ee
 # Show what packages are held back: sudo apt-mark showhold





Downgrade /UpgrADE GITLAB VERSION                   You have installed the exact same version and type (CE/EE)
--------------------------------------------------------
https://docs.gitlab.cn/14.0/ee/update/index.html

# If running Puma
sudo gitlab-ctl stop puma

# Stop sidekiq
sudo gitlab-ctl stop sidekiq

# If on Ubuntu: remove the current package
sudo dpkg -r gitlab-ee

# If on Centos: remove the current package
sudo yum remove gitlab-ee
---------------------------
# (Replace with gitlab-ce if you have GitLab FOSS installed)

# Ubuntu
sudo apt-cache madison gitlab-ee

# CentOS:
sudo yum --showduplicates list gitlab-ee
-------------------------------
# (Replace with gitlab-ce if you have GitLab FOSS installed)

# Ubuntu  version: 16.1.0
sudo apt install gitlab-ee=13.0.5-ee.0

# CentOS:
sudo yum install gitlab-ee-13.0.5-ee.0.el8
------------------------------------
                                                #run this commond on another terminal when facing this ERROR
                                                sudo /opt/gitlab/embedded/bin/runsvdir-start &              # ERROR:  ruby_block[wait for redis service socket] action run

sudo gitlab-ctl reconfigure


